# handlers/pay.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from sqlalchemy import select
from datetime import datetime, timedelta

from config import TRIBUTE_URL_TEMPLATE
from database.database import async_session
from database.user import User

pay_router = Router()

PAY_KB = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –≤ Tribute", url=TRIBUTE_URL_TEMPLATE)],
        [InlineKeyboardButton(text="üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ", callback_data="demo")],
    ]
)

def pay_text(user: User | None) -> str:
    if user and user.paid_until and user.paid_until > datetime.utcnow():
        left = (user.paid_until - datetime.utcnow()).days
        return f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ—Å—Ç–∞–ª–æ—Å—å ~{left} –¥–Ω.\n–•–æ—á–µ—à—å –ø—Ä–æ–¥–ª–∏—Ç—å?"
    return (
        "üí≥ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–ª—É–±—É.\n\n"
        "‚Ä¢ SOS –∏ WIN –ø–æ—Å—Ç—ã –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ\n"
        "‚Ä¢ –û—Ç–≤–µ—Ç—ã, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤\n"
        "‚Ä¢ –õ–∏—á–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Tribute:"
    )

@pay_router.callback_query(F.data == "pay")
async def open_pay_cb(cb: CallbackQuery):
    async with async_session() as ses:
        user = await ses.scalar(select(User).where(User.telegram_id == cb.from_user.id))
    await cb.message.answer(pay_text(user), reply_markup=PAY_KB)
    await cb.answer()

@pay_router.message(Command("pay"))
async def open_pay_cmd(msg: Message):
    async with async_session() as ses:
        user = await ses.scalar(select(User).where(User.telegram_id == msg.from_user.id))
    await msg.answer(pay_text(user), reply_markup=PAY_KB)
