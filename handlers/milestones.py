# handlers/milestones.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π-–≤–µ—Ö (milestones) :
    ‚Ä¢ –§—É–Ω–∫—Ü–∏—è `milestone_kb()` —Å—Ç—Ä–æ–∏—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–≤–µ—Ç–∞ –∏ –ª–∞–π–∫–∞
    ‚Ä¢ Callback-handler `like_milestone()` –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ—Ç –ª–∞–π–∫–∏ (–æ–¥–∏–Ω –ª–∞–π–∫ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
–ü–æ–¥–∫–ª—é—á–∏—Ç—å router –≤ bot.py :
    from handlers.milestones import milestone_router
    dp.include_router(milestone_router)
"""

from aiogram import Router, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from sqlalchemy.exc import IntegrityError
from sqlalchemy import func, select

from database.database import async_session
from database.milestone_like import MilestoneLike

milestone_router = Router()


def milestone_kb(msg_id: int, likes: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ—Å—Ç–∞-–≤–µ—Ö–∏.
    :param msg_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ (–Ω—É–∂–µ–Ω –¥–ª—è callback).
    :param likes:  –¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –ª–∞–π–∫–æ–≤.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton("‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply:{msg_id}")],
            [InlineKeyboardButton(f"üëç {likes}",   callback_data=f"like:{msg_id}")],
        ]
    )


@milestone_router.callback_query(F.data.startswith("like:"))
async def like_milestone(cb: CallbackQuery):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ª–∞–π–∫ –∫ milestone-—Å–æ–æ–±—â–µ–Ω–∏—é. –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ UX –∏—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ª–∞–π–∫."""
    msg_id = int(cb.data.split(":")[1])

    async with async_session() as ses:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–∏—Å–∞—Ç—å –ª–∞–π–∫. –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å ‚Äì –ª–æ–≤–∏–º IntegrityError.
            ses.add(MilestoneLike(message_id=msg_id, user_id=cb.from_user.id))
            await ses.commit()
        except IntegrityError:
            await cb.answer("–£–∂–µ –ª–∞–π–∫–Ω—É–ª üôÇ", show_alert=True)
            return

        likes = await ses.scalar(
            select(func.count()).select_from(MilestoneLike).where(MilestoneLike.message_id == msg_id)
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await cb.message.edit_reply_markup(milestone_kb(msg_id, likes))
    await cb.answer("üëç")